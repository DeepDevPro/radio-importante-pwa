name: 🚀 Deploy Frontend to S3

on:
  push:
    tags: ['v*']  # Trigger apenas em TAGs
  workflow_dispatch: # Permite trigger manual

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔧 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: 🏗️ Build production
      run: |
        # Build com TAG para versionamento
        VITE_VERSION="${{ github.ref_name }}" npm run build
        
        echo "Build completed for version ${{ github.ref_name }}"

    - name: 🚀 Deploy to S3
      run: |
        TAG_NAME="${{ github.ref_name }}"
        
        # Use bucket padrão se S3_BUCKET_NAME não estiver definido
        S3_BUCKET="${{ secrets.S3_BUCKET_NAME }}"
        if [ -z "$S3_BUCKET" ]; then
          S3_BUCKET="radio-importante-frontend"
          echo "⚠️ S3_BUCKET_NAME não definido, usando bucket padrão: $S3_BUCKET"
        fi
        
        echo "Deploying to S3 bucket: $S3_BUCKET"
        
        # Verificar se bucket existe, criar se necessário
        if ! aws s3 ls "s3://$S3_BUCKET" 2>/dev/null; then
          echo "📦 Bucket $S3_BUCKET não existe, criando..."
          aws s3 mb s3://$S3_BUCKET --region us-west-2
          
          # Configurar bucket para website estático
          aws s3 website s3://$S3_BUCKET --index-document index.html --error-document index.html
          
          # Configurar bucket policy para acesso público
          cat > bucket-policy.json << 'EOF'
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": "arn:aws:s3:::BUCKET_NAME/*"
            }
          ]
        }
        EOF
          
          # Substituir BUCKET_NAME no policy
          sed -i "s/BUCKET_NAME/$S3_BUCKET/g" bucket-policy.json
          
          # Aplicar policy
          aws s3api put-bucket-policy --bucket $S3_BUCKET --policy file://bucket-policy.json
          
          echo "✅ Bucket criado e configurado para hosting estático"
        fi
        
        # Upload principal
        aws s3 sync dist/ s3://$S3_BUCKET --delete
        
        # Backup da versão em releases/
        aws s3 sync dist/ s3://$S3_BUCKET/releases/${TAG_NAME}/ 
        
        echo "✅ Frontend deployed to S3"
        echo "📦 Backup created at releases/${TAG_NAME}/"

    - name: 🔄 Invalidate CloudFront
      run: |
        # Use bucket padrão se S3_BUCKET_NAME não estiver definido
        S3_BUCKET="${{ secrets.S3_BUCKET_NAME }}"
        if [ -z "$S3_BUCKET" ]; then
          S3_BUCKET="radio-importante-frontend"
        fi
        
        if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          echo "✅ CloudFront cache invalidated"
        else
          echo "⚠️ CloudFront distribution ID not configured"
        fi

    - name: 📋 Deployment Summary
      run: |
        # Use bucket padrão se S3_BUCKET_NAME não estiver definido
        S3_BUCKET="${{ secrets.S3_BUCKET_NAME }}"
        if [ -z "$S3_BUCKET" ]; then
          S3_BUCKET="radio-importante-frontend"
        fi
        
        echo "📋 Frontend Deployment Summary:" >> $GITHUB_STEP_SUMMARY
        echo "- 🌐 **URL**: https://$S3_BUCKET.s3-website-us-west-2.amazonaws.com" >> $GITHUB_STEP_SUMMARY
        echo "- 🏷️ **Version**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 **Backup**: s3://$S3_BUCKET/releases/${{ github.ref_name }}/" >> $GITHUB_STEP_SUMMARY
